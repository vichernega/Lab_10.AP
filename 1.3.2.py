# Чернеги Вікторії   Б19_д/122Б
'''
Сформувати функцію для обчислення цифрового кореню натурального числа.
Цифровий корінь отримується наступним чином: необхідно скласти всі цифри заданого
числа, потім скласти всі цифри знайденої суми і повторювати процес до тих пір, поки
сума не буде дорівнювати однозначному числу, що і буде цифровим коренем заданого числа.
'''
import time                             # імпортування бібліотек


def sqrt_iter(n):                       # фунція, що обчислює цифровий корінь числа ітераційно
    start = time.time()                 # відлік часу
    while n >= 10:                      # поки задане користувачем число має більше 1 цифри, виконуться цикл
        summa = 0                       # занулення суми при кожній новій ітерації
        while n >= 10:                  # поки задане користувачем число має більше 1 цифри, виконуться цикл
            k = n % 10                  # взнаємо останню цифру в числі
            summa += k                  # додаємо останню цифру числа до суми
            n //= 10                    # відкидаємо вже додану до суми цифру
        summa += n                      # після виконання циклу додаємо до суми цифру, що залишилась (та, що на першій позиції у числі)
        n = summa                       # писвоюємо змінній n значення суми, щоб знаходити суму цифр вже знайденої суми
    print(n)                            # виведення цифрового кореня
    print(f'Time: {time.time() - start} seconds')  # час виконання програми


def sqrt_rec(n):                        # фунція, що обчислює цифровий корінь числа рекурсивно
    if n < 10:                          # умова для виходу з ітерації (довжина числа - одна цифра)
        return n                        # повернення цього числа
    else:
        summa = n%10 + sqrt_rec(n//10)  # додавання всіх цифр числа n (остання цифра числа n + передостання...)
        if summa >= 10:                 # якщо сума не однозначна, то виклик функції кореня від утвореної суми
                return sqrt_rec(summa)
        return(summa)                   # повернення суми


list = []
n = int(input('n = '))                  # введення числа з клавіатури
sqrt_iter(n)                            # виклик функції визначення цифрового кореня ітераційно
start = time.time()                     # відлік часу для рекурсивної програми
print(sqrt_rec(n))                      # виклик функції визначення цифрового кореня ітераційно
print(f'Time: {time.time() - start} seconds')  # час виконання рекурсивної програми

'''
На мою думку, для реалізації даної програми краще використовувати ітерацію, оскільки 
рекурсія тут працює дуже схоже до факторіала, тобто зберігає в собі всі попередні значення
і обмежується стеком, хоча вона набагато читабельніша. Тому ітераційне представлення працює швидше
та використовує менше пам'яті.
'''