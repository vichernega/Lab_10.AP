# Чернеги Вікторії   Б19_д/122Б
'''
Сформувати функцію для введення з клавіатури послідовності чисел і виведення
її на екран у зворотному порядку (завершаючий символ послідовності – крапка)
'''
import time                                     # імпортування бібліотек

def rev_iter():                                 # фунція для перевертання послідовності ітераційно
    start = time.time()                         # відлік часу

    list = []                                   # список для занесення останніх символів послідовності
    for i in range(-1,-(len(seq))-1, -1):       # цикл, для проходження по елементам послідовності з кінця
        list.append(seq[i])                     # додавання останнього символа в список
    print(f"Iteration reverse: {''.join(list)}")    # виведення перевернутої послідовності, яка утворилась із з'єднання всіх елементів списку

    print(f'Time: {time.time() - start} seconds')   # час виконання програми
    print('---------------------------------------------------------------------')


def rev_rec(seq):                               # фунція для перевертання послідовності рекурсивно
    if len(seq) == 1:                           # умова для виходу з рекурсії (якщо послідовність зменшилась до одного символа, то повернути його)
        return seq
    return seq[-1] + rev_rec(seq[:-1])          # конкатенація останнього символа послідовності та виклик функції без цього символа


seq = input('Sequence: ')                       # введення послідовності
seq = seq.partition('.')[0]                     # видалення всіх елементів після першої крапки
print('Sequence: ', seq)                        # виведення нової послідовності
rev_iter()                                      # виклик ітераційної функції
start = time.time()                             # відлік часу для рекурсивної програми
print('Recursion reverse: ',rev_rec(seq))       # виклик рекурсивної функції
print(f'Time: {time.time() - start} seconds')   # час виконання рекурсивної програми

'''
На мою думку, для реалізації даного завдання можна використовувати будь-який метод, оскільки
вони обидва швидкі і читабельні. Але у випадку ітерації немає обмежень на кількість проходжень у циклі 
на відмінну від скінченного стеку, тому я б використовувала її, якби потрібно було обирати.
'''
